package z.decoratorAndProxy;

/**
 * 代理模式和装饰模式的类图几乎一模一样；
 * 代理模式是把当前的行为或功能委托给其它对象执行，代理类负责接口限定，是否可以调用真实的角色，以及是否对发送到真实的角色
 * 的消息进行变形处理，他不对被代理类的功能做任何处理，保持原汁原味的调用，代理模式典型就是：AOP
 * 
 * 装饰模式是保证原接口不变的情况下，加强类的功能，它保证的是被修饰的对象功能比原始对象的功能丰富，
 * 但不准做准入条件判断和准入参数的过滤，如是否可以执行类的功能，过滤输入参数是否符合规范等，这些都不是装饰模式关心的
 * 装饰模式的典型：JAVA IO 流
 * @author yyl-pc
 */
public class TestAll {

}
